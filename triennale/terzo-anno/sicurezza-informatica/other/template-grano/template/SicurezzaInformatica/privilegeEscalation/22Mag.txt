22/5

22/5

PARTE HOST : https://virtuale.unibo.it/pluginfile.php/1973813/mod_resource/content/10/hids.pdf
La rilevazione sugli host avviene con 2 tecniche: analisi dei log, analisi dell'integrità del file system

Per analizzare il file system si possoo usare comandi per cercare file in cui il SUID o le capabilities sono
settate. AIDE permette di fare operaizoni del genere in maniera automatizzata

(sha256sum /etc/passwd -> fornisce l'hash del file /etc/passwd)

il database di AIDE in "/var/lib/aide" è una cartella di proprietà di AIDE, su cui solo questi (e root) può agire.
Inizialmente è vuota.

Regole e configurazione in: /etc/aide/
Il file non contiene nulla riguardo il monitoring, che invece è contenuto in /etc/aide/aide.conf.d

Proviamo a fare un cambiamento:
- nel file /etc/aide/aide.conf commentiamo la riga # @@x_include /etc/aide/aide.conf.d ^[a-zA-Z0-9_-]+$
- aggiungiamo sotto "/etc f R"
	-f per controllare i file 
- lanciamo sudo aideinit
- è adesso apparso qualcosa di nuovo in /var/lib/aide

Funziona come uno snapshot che aide confronta.

Mettiamo caso che qualcuno abbia aggiunto un utente con
- sudo useradd toor
- sudo passwd toor

Se lanciamo "aide -c /etc/aide/aide.conf -C" ci viene detto che alcune entità sono cambiate rispetto a quello snapshot. Inoltre mostra l'elenco dei file modificati (etx/groups, etc/shadow, etc/passwd) e di seguito i dettagli di cosa è cambiato. I file sono memorizzati in doppia copia. Quelli nominati con il - sono la versione dello snapshot.

In alternativa, esiste "sudo diff /etc/passwd /etc/passwd-"

Mettiamo adesso il caso che si cambi un SUID:
- sudo chmod +s /usr/bin/tee

Problema: aide non ascola la /usr/bin, quindi non rileva il cambiamento. Se provassimo a modificare la config e rilanciare aideinit, si scatterebbe uno snapshot della situazione attuale, senza più possibilità di accorgersi che il nostro sistema è stato infettato perché diventa la "base".

Mettiamo all'utente tor i permessi read/write su /etc/sudoers : 
- setfacl -m u:toor:rw /etc/sudoers
Aide lo rivela


Mettiamo caso di una proprietà attribuita ad un file:
- sudo /usr/sbin/setcap "CAP_DAC_OVERRIDE=eip" /usr/bin/vim.tiny
aide lo rileva, ma non è molto chiaro cosa sia cambiato. Dopo aver notato il cambiamento, meglio usare:
- sudo getcap /usr/bin/vim.tiny

PARTE NETWORK: https://virtuale.unibo.it/pluginfile.php/1973818/mod_resource/content/5/nids.pdf

Suricata analiza il traffico real-time ma può persino lavorare offline.

Se qualcuno attende: Reject -> reject può mandare un messaggio di rifiuto al mittente, al destinatario o entrambi
Altrimenti: Drop

per settare download del .yaml e delle ping rules
- il .yaml deve sostituire quello presente in /etc/suricata
- la stringa deve essere messa in un file da creare in /etc/suricata/rules chiamato seclab.rules

Lanciamo con : sudo suricata -c /etc/suricata/suricata.yaml -i eth1 -vvv

proviamo a fare un ping da kali all'host: ping a 192.168.56.1
Suricata non dice nulla, vediamo i log in /var/log/suricata (specificata nel file conf di suricata):
- dentro fast.log si vede una riga per ping

Aggiungiamo la regola facebook nel file seclab.rules e riavviamo suricata
Se proviamo a connetterci a facebook, suricata scriverà qualcosa nei log

Ci sono anche log più approfonditi in /var/log/suricata/eve.json -> per leggerli installare il pacchetto jq con apt
- > tail -f /var/log/suricata/eve.json | jq 'select(.event_type="alert")'






