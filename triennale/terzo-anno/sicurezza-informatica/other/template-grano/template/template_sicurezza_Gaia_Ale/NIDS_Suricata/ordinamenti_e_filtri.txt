In Wireshark, è possibile utilizzare vari ordinamenti e filtri per analizzare il traffico di rete e identificare potenziali attacchi. Ecco alcune tecniche e criteri di ordinamento che possono aiutarti a individuare attività sospette o malevole:


ORDINAMENTI UTILI IN WIRESHARK-------------

	1	Ordinare per Protocollo
Descrizione: Ordinare il traffico per protocollo consente di visualizzare facilmente quali protocolli sono più utilizzati e identificare traffico insolito.

Come fare: Clicca sulla colonna "Protocol" per ordinare i pacchetti in base al protocollo.

Utilità: Può aiutare a individuare traffico anomalo, come pacchetti ICMP inaspettati, traffico DNS eccessivo, o protocolli insoliti.

	2	Ordinare per Indirizzo IP Sorgente/Destinazione
Descrizione: Ordinare i pacchetti per indirizzo IP sorgente o destinazione può aiutare a identificare IP che generano molto traffico.

Come fare: Clicca sulle colonne "Source" o "Destination" per ordinare i pacchetti in base all'indirizzo IP.

Utilità: Utile per identificare attività sospette come scansioni di rete (molti pacchetti provenienti da un singolo IP) o attacchi DDoS.

	3	Ordinare per Porta Sorgente/Destinazione
Descrizione: Ordinare i pacchetti per porta sorgente o destinazione può aiutare a rilevare tentativi di connessione su porte non standard o porte conosciute per essere utilizzate in attacchi.

Come fare: Clicca sulle colonne "Source Port" o "Destination Port" per ordinare i pacchetti in base alle porte.

Utilità: Può aiutare a individuare tentativi di exploit su servizi specifici o attività di scanning delle porte.

	4	Ordinare per Timestamp
Descrizione: Ordinare per timestamp consente di visualizzare i pacchetti in ordine temporale, utile per vedere la sequenza di eventi.

Come fare: Clicca sulla colonna "Time" per ordinare i pacchetti in ordine cronologico.

Utilità: Utile per ricostruire gli eventi di un attacco e capire la cronologia delle azioni.


FILTRI UTILI IN WIRESHARK-----------------------

	1	Filtrare per Indirizzo IP
Descrizione: Filtrare il traffico per indirizzo IP specifico.

Esempio: ip.addr == 192.168.1.1

Utilità: Identificare tutto il traffico proveniente o diretto a un IP sospetto.

	2	Filtrare per Protocollo
Descrizione: Filtrare il traffico per un protocollo specifico.

Esempio: tcp, udp, icmp, http

Utilità: Concentrarsi su traffico relativo a protocolli noti per essere utilizzati in attacchi.

	3	Filtrare per Porta
Descrizione: Filtrare il traffico per porta sorgente o destinazione.

Esempio: tcp.port == 80 o udp.port == 53

Utilità: Individuare traffico su porte che possono essere associate ad attività malevole.

	4	Filtrare per Errori o Comportamenti Anomali
Descrizione: Filtrare il traffico per codici di errore o flag specifici.

Esempio: tcp.flags.syn == 1 (pacchetti SYN), icmp.type == 8 (richieste echo ICMP)

Utilità: Identificare attività come scansioni di porte o tentativi di ping flood.




##ESEMPI DI ANALISI
	1	Identificare una Scansione di Porte
Tecnica: Ordinare per "Source" e "Destination Port", quindi cercare un IP sorgente che tenta di connettersi a molte porte diverse.

Filtro: ip.src == 192.168.1.1 && tcp.flags.syn == 1

	2	Rilevare un Attacco DDoS
Tecnica: Ordinare per "Destination" e cercare un IP destinazione che riceve un volume insolitamente alto di traffico.

Filtro: ip.dst == 192.168.1.1

	3	Riconoscere un Tentativo di Exploit HTTP
Tecnica: Ordinare per "Protocol" e filtrare per http per analizzare le richieste HTTP.

Filtro: http.request.method == "POST" e contenuti particolari come content:"/admin"


##POSSIBILI ATTACCHI:
Ecco alcune possibilità:

1. Attacco DDoS (Distributed Denial of Service)
Un attacco DDoS coinvolge molteplici sistemi compromessi che inviano traffico verso un singolo bersaglio con l'intento di sovraccaricarlo e renderlo inaccessibile. Questo può includere:
	• SYN Flood: Un tipo di DDoS dove i sistemi inviano una grande quantità di pacchetti TCP SYN per iniziare una connessione, ma non completano mai il processo di handshake.

	•HTTP Flood: Molti sistemi inviano richieste HTTP legittime al server web per sovraccaricarlo.

2. Scansione di Vulnerabilità Distribuita
Gli attaccanti potrebbero utilizzare molteplici IP per sondare un server alla ricerca di vulnerabilità. Questo approccio aiuta a mascherare l'origine dell'attacco e a eludere i sistemi di rilevamento delle intrusioni (IDS).

3. Attività Legittima di Alta Traffico
Non tutte le attività con molte connessioni TCP sono malevole. Potrebbe trattarsi di:
	• Un server popolare o un'applicazione web: Riceve molte richieste da utenti legittimi.
	• Servizi di Content Delivery Network (CDN): Ricevono traffico da molteplici nodi distribuiti geograficamente.
	• API di alto volume: Utilizzate da numerosi client contemporaneamente.

4. Botnet
Un attaccante potrebbe utilizzare una botnet (una rete di computer compromessi) per eseguire varie attività malevole come parte di un comando e controllo.

5. Attività di Crawler o Bot
I motori di ricerca e altri servizi di crawling potrebbero inviare molteplici richieste per indicizzare il contenuto di un sito web.







----------PORT SCANNING
Quando osservi molte connessioni TCP da una stessa fonte a una stessa destinazione, con porte sorgente e destinazione che cambiano ogni volta, può indicare diversi tipi di attacchi o comportamenti malevoli, come il Port Scanning.


