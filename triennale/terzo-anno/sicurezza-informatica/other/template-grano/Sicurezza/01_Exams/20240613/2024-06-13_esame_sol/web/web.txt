La challenge si presenta con una pagina dove viene mostrato un link ad una "XSS CHALLENGE".

Navigando sul link, si osserva come sulla pagina venga mostrato il testo "Hello SEC_EXAM". Guardando l'URL, si nota come ci sia un parametro name che abbia come valore SEC_EXAM.

Provando a cambiare il parametro name, ci si accorge che questo viene cambiato anche nella pagina. Si potrebbe quindi avere una XSS Reflected. Si prova un payload classico: <script>alert("ciao")</script>

Il sito restituisce "error". Forse è presente qualche meccanismo contro gli XSS o il payload è stato filtrato.

Proviamo ad utilizzare qualche variazione di script, come ScRiPT. A quanto pare nessuna variazione di script permette di fare XSS. Si scopre però che <a> funziona, quindi si prova ad utilizzare altri tag.

Si scopre che il tag <img> non è filtrato. Quindi si procede ad utilizzare una classica XSS con img, ovvero :

<img src="x" onerror="alert()">


La vulnerabilità è dovuta ad una NON sanitizzazione dei dati in input, in particolare del parametro name nel file xss_exam.php. 

Essendo che questo parametro viene poi mostrato nella pagina, si dovrebbe prima sanificare, o attraverso escaping dei caratteri che possano portare a dell'HTML valido, o, in maniera ancora più efficace, con una whitelist di caratteri ammessi per il nome (da cui escludere, per esempio <, >, /, ...).

In generale, ogni dato in input dall'esterno dovrebbe essere controllato e sanificato. 

Il filtro impiegato dal file php è troppo permissivo, infatti basta utilizzare un tag diverso da script per forzare una XSS.
