Esercizio 1 - Privesc

Leggete tutto prima di fare qualsiasi cosa!

Scaricare sulla VM Kali il file change5 e renderlo eseguibile

$ chmod +x ./change4

Il comando apporta modifiche a file dentro /usr/bin e /etc

Prima parte:

ideare un modo di identificare il file modificato e il tipo di modifica apportata.
lanciare sudo ./change5
attuare la strategia ideata al punto 1 per identificare il file modificato e il tipo di modifica apportata.
documentare tutti i passi svolti in modo dettagliato nel file da consegnare  integrity.txt 

Seconda parte:
catturate i comandi seguenti e l'output in uno screenshot  privesc.png 
 
usate come utente kali senza sudo il/i file modificato/i dal comando change5 che ritenete utili per inserire nei file in /etc/passwd ed /etc/shadow le righe opportune per "creare" un utente di nome toor con privilegi di root e password gotRoot (ricordate che esistono le man page)
da kali diventate toor e lanciate id


Premessa comune agli esercizi 2 e 3

Scaricate il tracciato di traffico dump.pcap.gz ed estraetelo col comando gunzip dump.pcap.gz

analizzate il tracciato con Wireshark
il tracciato è raccolto su di un router che ha indirizzo con byte finale = 1 su tre subnet diverse
fate uso dell'ordinamento per aiutarvi a distinguere diversi tipi di traffico
concentratevi unicamente sui protocolli applicativi, ignorando i (numerosissimi) pacchetti TCP degli handshake
Esercizio 2 - intrusion detection

uno solo dei tipi di traffico è evidentemente un attacco
scrivete due regole per Suricata che permettano di registrare nel file degli eventi, rispettivamente
il passaggio dei pacchetti dall'attaccante al bersaglio
il passaggio dei pacchetti di risposta dal bersaglio all'attaccante
Consegnate un file  attacks.txt  contenente la descrizione dell'attacco e le regole di Suricata richieste, e il file   eve.json   prodotto analizzando il tracciato con Suricata configurato con tali regole.


Esercizio 3 - iptables

Gli altri tipi di traffico presenti nel tracciato sono da considerare legittimi.

Consegnate un file  ipt.sh  coi comandi che permettano di configurare il packet filter del router per consentire unicamente tali interazioni.
