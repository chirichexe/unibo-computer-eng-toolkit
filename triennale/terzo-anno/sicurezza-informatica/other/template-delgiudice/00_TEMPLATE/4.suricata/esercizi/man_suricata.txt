Campi di Base
-Action:
	Specifica l'azione da intraprendere quando la regola viene attivata. Le azioni comuni includono:
	alert: Genera un avviso.
	log: Logga il pacchetto.
	pass: Passa il pacchetto senza ulteriori controlli.
	drop: Scarta il pacchetto (in modalità inline).
	reject: Rifiuta il pacchetto e invia un messaggio ICMP o TCP di rifiuto (in modalità inline).

-Protocol:
	Specifica il protocollo da monitorare. I valori comuni includono tcp, udp, icmp, e ip.

-Source IP and Port:
	Specifica l'indirizzo IP sorgente e la porta.
	Formato: IP/Port. Ad esempio, 192.168.1.1/80.
	Può essere any per indicare qualsiasi indirizzo o porta.

-Direction:
	Specifica la direzione del traffico da monitorare.
	Utilizza -> per indicare traffico in uscita e <- per traffico in entrata.
	<> può essere utilizzato per traffico bidirezionale.

-Destination IP and Port:
	Specifica l'indirizzo IP di destinazione e la porta.
	Formato: IP/Port. Ad esempio, 192.168.1.2/443.
	Può essere any per indicare qualsiasi indirizzo o porta.

-Opzioni delle Regole
	msg:
	Specifica il messaggio che verrà generato quando la regola viene attivata.
	Esempio: msg:"Suspicious traffic detected";
	
	sid:
	Signature ID, un ID univoco per identificare la regola.
	Esempio: sid:1000001;
	
	rev:
	Revision number, utilizzato per tracciare le modifiche alla regola.
	Esempio: rev:1;
	
	classtype:
	Specifica la classificazione dell'allarme.
	Esempio: classtype:attempted-admin;
	
	priority:
	Specifica la priorità dell'allarme.
	Esempio: priority:1;
	
	content:
	Cerca una stringa specifica nel payload del pacchetto.
	Esempio: content:"malicious_string";
	
	nocase:
	Ignora la distinzione tra maiuscole e minuscole durante la ricerca di contenuti.
	Esempio: nocase;
	
	pcre:
	Utilizza espressioni regolari Perl Compatible per cercare contenuti complessi.
	Esempio: pcre:"/regex_pattern/";
	
	flow:
	Specifica la direzione del flusso di traffico (ad esempio, solo traffico stabilito).
	Esempio: flow:to_server,established;
	
	depth:
	Limita la ricerca di contenuti ai primi n byte del payload.
	Esempio: depth:10;
	
	offset:
	Inizia la ricerca di contenuti a partire dal byte n del payload.
	Esempio: offset:5;
	
	distance:
	Specifica il numero di byte tra due stringhe di contenuto da cercare.
	Esempio: distance:10;
	
	within:
	Specifica che il secondo contenuto deve essere trovato entro n byte dal primo.
	Esempio: within:20;
	
	isdataat:
	Verifica se ci sono almeno n byte di dati dopo un offset specificato.
	Esempio: isdataat:5,relative;
	
	byte_test:
	Testa i valori di byte a una data posizione.
	Esempio: byte_test:4,>,100,0;
	
	byte_jump:
	Salta un numero specificato di byte in base ai valori trovati nei byte.
	Esempio: byte_jump:4,0,relative;
	
	ttl:
	Testa il valore del campo TTL.
	Esempio: ttl: < 64;
	
	ipopts:
	Controlla le opzioni del pacchetto IP.
	Esempio: ipopts:lsrr;
	
	fragbits:
	Verifica i bit di frammentazione del pacchetto.
	Esempio: fragbits:M;
	
	dsize:
	Verifica la dimensione del payload.
	Esempio: dsize:>100;
	
	flags:
	Controlla i flag del pacchetto TCP.
	Esempio: flags:S;
	
	
Esempio Completo di Regola Suricata
Ecco un esempio più complesso che utilizza diversi campi e opzioni:
	alert tcp $HOME_NET any -> $EXTERNAL_NET 80 (msg:"Potential web attack"; content:"/etc/passwd"; nocase; sid:1000002; rev:1; classtype:attempted-admin; priority:1; flow:to_server,established; dsize:>100; flags:PA;)

In questo esempio:
La regola genera un avviso per traffico TCP proveniente dalla rete domestica verso la rete esterna sulla porta 80.
Cerca la stringa "/etc/passwd" nel payload, ignorando la distinzione tra maiuscole e minuscole.
La regola ha un sid di 1000002 e una revisione 1.
Classifica l'allarme come attempted-admin e assegna una priorità di 1.
Si applica solo a flussi di traffico stabiliti diretti verso il server.
Controlla che la dimensione del payload sia superiore a 100 byte e che i flag TCP includano PSH e ACK.

