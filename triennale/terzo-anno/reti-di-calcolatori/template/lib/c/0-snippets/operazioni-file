 // SOSTITUZIONE CARATTERI =========================== SNIPPET
// Variabili ------------------------------------------------
char buffer[DIM_BUFF];
int fd, temp_fd, i;
int bytes_read;

// Algoritmo ------------------------------------------------
// Apro il file
fd = open(filename, O_RDONLY);
if (fd < 0) {
    perror("open");
    //ERRORE
}

// Creo un file temporaneo
char temp_filename[] = "/tmp/tempfileXXXXXX";
temp_fd = mkstemp(temp_filename);
if (temp_fd < 0) {
    perror("creazione file temporaneo");
    close(fd);
    //ERRORE
}

// Filtro il contenuto
while ((bytes_read = read(fd, buffer, DIM_BUFF)) > 0) {
    for ( i = 0; i < bytes_read; i++ ) {
        if (!isalpha((unsigned char)buffer[i])) { // condizione di scrittura (se Ã¨ alfabetico)
            if (write(temp_fd, &buffer[i], 1) < 0) {
                perror("write");
                close(fd);
                close(temp_fd);
                unlink(temp_filename);
                //ERRORE
            }
        }
    }
}

if (bytes_read < 0) {
    perror("read");
    close(fd);
    close(temp_fd);
    unlink(temp_filename);
    //ERRORE
}

close(fd);
close(temp_fd);

// Rinomino il file temporaneo
if (rename(temp_filename, filename) < 0) {
    perror("rename");
    unlink(temp_filename);
    //ERRORE
}
// FINE SOSTITUZIONE CARATTERI ====================== SNIPPET


/* CREAZIONE E APERTURA ============================ SNIPPET */
fd = open("example.txt", O_CREAT | O_RDWR, 0644);
if (fd == -1) {
    perror("Errore nella creazione/apertura del file");
    exit(EXIT_FAILURE);
}
/* FINE CREAZIONE E APERTURA ======================== SNIPPET */

/* SCRITTURA ============================ SNIPPET */
const char *content = "Hello, World!\n";
bytes_written = write(fd, content, strlen(content));
if (bytes_written == -1) {
    perror("Errore nella scrittura del file");
    close(fd);
    exit(EXIT_FAILURE);
}
/* FINE SCRITTURA ======================== SNIPPET */

/* LETTURA ============================ SNIPPET */
lseek(fd, 0, SEEK_SET); // Torna all'inizio del file
bytes_read = read(fd, buffer, sizeof(buffer) - 1);
if (bytes_read == -1) {
    perror("Errore nella lettura del file");
    close(fd);
    exit(EXIT_FAILURE);
}
buffer[bytes_read] = '\0';
printf("Contenuto letto: %s", buffer);
/* FINE LETTURA ======================== SNIPPET */

/* CHIUSURA ============================ SNIPPET */
if (close(fd) == -1) {
    perror("Errore nella chiusura del file");
    exit(EXIT_FAILURE);
}
/* FINE CHIUSURA ======================== SNIPPET */

/* RIMOZIONE ============================ SNIPPET */
if (unlink("example.txt") == -1) {
    perror("Errore nella rimozione del file");
    exit(EXIT_FAILURE);
}
/* FINE RIMOZIONE ======================== SNIPPET */