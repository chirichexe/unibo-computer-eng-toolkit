// SCORRE LE SOTTODIRECTORY ================================== SNIPPET
// Variabili (sposta sopra) --------------------------------------
int fd_file;
int valida;
struct dirent *entry;
struct dirent *subentry;
char fullpath[MAX_NAME_SIZE * 2];
char dirpath[MAX_NAME_SIZE * 2];
char buffer[DIM_BUFF];
int bytes_read;
int num_files;
int fd;
DIR *dir;
DIR *subdir;

// Algoritmo -----------------------------------------------------
dir = opendir(request->dirname);
if (dir == NULL) {
    perror("opendir");
    response.dimLista = -1;
} else {
    // Scorre la directory inserita
    while ((entry = readdir(dir)) != NULL) {
        if (entry->d_type == DT_DIR && strcmp(entry->d_name, ".") != 0 && strcmp(entry->d_name, "..") != 0) {

            snprintf(dirpath, sizeof(dirpath), "%s/%s", request->dirname, entry->d_name);
            printf("Trovata sottodirectory %s\n", dirpath);

            subdir = opendir(dirpath);
            if (subdir == NULL) {
                perror("opendir");
                continue;
            }

            // Scorre le sottodirectory
            valida = 1;
            num_files = 0;
            while ((subentry = readdir(subdir)) != NULL) {
                if (strcmp(subentry->d_name, ".") != 0 && strcmp(subentry->d_name, "..") != 0) {
                    snprintf(fullpath, sizeof(fullpath), "%s/%s", dirpath, subentry->d_name);
                    printf("\tFile trovato: %s\n", fullpath);

                    // Analizzo file ------------------------------------
                    
                    fd = open(fullpath, O_RDONLY);
                    if (fd < 0) {
                        perror("Errore apertura file");
                        continue;
                    }

                    // Condizioni di validità
                    if ( IS_TEXT(subentry -> d_name)){
                        num_files++;
                    }

                    while ((bytes_read = read(fd, buffer, DIM_BUFF)) > 0) {
                        for (i = 0; i < bytes_read; i++ ) {
                            if (buffer[i] > 127){
                                valida = 0;
                                printf("Trovato carattere non ASCII\n");
                                break;
                            }
                        }
                    }

                    if (bytes_read < 0) {
                        perror("Errore lettura file");
                        close(fd);
                        continue;
                    }

                    close(fd);

                    // File analizzato ----------------------------------
                }
            }
            closedir(subdir);


            // Salva il nome della directory nella lista se è valida
            if (valida && num_files >= 2){
                strcpy(response.elementi[response.dimLista].dirname, entry->d_name);
                response.dimLista++;
            }
        }
    }
    closedir(dir);
}
// FINE SCORRE LE SOTTODIRECTORY ============================== SNIPPET