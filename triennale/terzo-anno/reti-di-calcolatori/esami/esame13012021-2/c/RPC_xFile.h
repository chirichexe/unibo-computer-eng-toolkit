/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_XFILE_H_RPCGEN
#define _RPC_XFILE_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAX_NAME_SIZE 30
#define MAX_LIST_SIZE 6

struct FileName {
	char filename[MAX_NAME_SIZE];
};
typedef struct FileName FileName;

struct DirName {
	char dirname[MAX_NAME_SIZE];
};
typedef struct DirName DirName;

struct OutputLista {
	DirName elementi[MAX_LIST_SIZE];
	int dimLista;
};
typedef struct OutputLista OutputLista;

#define ESAME_PROG 0x20000014
#define ESAME_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define elimina_occorrenze 1
extern  int * elimina_occorrenze_1(FileName *, CLIENT *);
extern  int * elimina_occorrenze_1_svc(FileName *, struct svc_req *);
#define lista_sottodirettori 2
extern  struct OutputLista * lista_sottodirettori_1(DirName *, CLIENT *);
extern  struct OutputLista * lista_sottodirettori_1_svc(DirName *, struct svc_req *);
extern int esame_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define elimina_occorrenze 1
extern  int * elimina_occorrenze_1();
extern  int * elimina_occorrenze_1_svc();
#define lista_sottodirettori 2
extern  struct OutputLista * lista_sottodirettori_1();
extern  struct OutputLista * lista_sottodirettori_1_svc();
extern int esame_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_FileName (XDR *, FileName*);
extern  bool_t xdr_DirName (XDR *, DirName*);
extern  bool_t xdr_OutputLista (XDR *, OutputLista*);

#else /* K&R C */
extern bool_t xdr_FileName ();
extern bool_t xdr_DirName ();
extern bool_t xdr_OutputLista ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_XFILE_H_RPCGEN */
